name: Buld and run tests

on:
  push:
    branches: 
    - main
    - Develop
  pull_request:
    types: [opened]
    branches: 
    - main
    - Develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest
    
    strategy:
      matrix:
        destination: ['platform=iOS Simulator,OS=14.4,name=iPhone 11']
        xcode: ['/Applications/Xcode_12.4.app/Contents/Developer']
        scheme: ['GHActionsTest']
        workspace: ['GHActionsTest.xcworkspace']
        working-directory: ['./GHActionsTest']
        
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Log build information
        env:
          DEVELOPER_DIR: ${{ matrix.xcode }}
        run: |
          echo Show the currently detailed version of Xcode for CLI
          xcode-select -p
          echo Show Build Settings
          xcodebuild -workspace '${{ matrix.workspace }}' -scheme '${{ matrix.scheme }}' -showBuildSettings
          echo Show Build SDK
          xcodebuild -workspace '${{ matrix.workspace }}' -scheme '${{ matrix.scheme }}' -showsdks
          echo Show Available Destinations
          xcodebuild -workspace '${{ matrix.workspace }}' -scheme '${{ matrix.scheme }}' -showdestinations
        working-directory: 
          '${{ matrix.working-directory }}'
    
      - name: Install Dependencies
        run: pod install
        working-directory: '${{ matrix.working-directory }}'
       
      - name: Build for testing
        env:
          scheme: ${{ matrix.scheme }}
          workspace: ${{ matrix.workspace }}
          destination: ${{ matrix.destination }}
          DEVELOPER_DIR: ${{ matrix.xcode }}
        run: 
          xcodebuild build-for-testing -scheme "$scheme" -workspace "$workspace" -destination "$destination" -showBuildTimingSummary
        working-directory: 
          '${{ matrix.working-directory }}'
        
      - name: Test
        env:
          scheme: ${{ matrix.scheme }}
          workspace: ${{ matrix.workspace }}
          destination: ${{ matrix.destination }}
          DEVELOPER_DIR: ${{ matrix.xcode }}
        run: 
          xcodebuild test-without-building -scheme "$scheme" -workspace "$workspace" -destination "$destination" -showBuildTimingSummary
        working-directory: 
          '${{ matrix.working-directory }}'
